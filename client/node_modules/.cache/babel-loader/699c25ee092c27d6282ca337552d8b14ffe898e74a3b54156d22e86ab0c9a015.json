{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Chessboard}from'react-chessboard';import{Chess}from'chess.js';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ComputerGame=()=>{const navigate=useNavigate();const[game,setGame]=useState(new Chess());const[difficulty,setDifficulty]=useState(5);const[isGameOver,setIsGameOver]=useState(false);const[result,setResult]=useState(null);const[isThinking,setIsThinking]=useState(false);const[playerColor,setPlayerColor]=useState('w');// w - белые, b - черные\nuseEffect(()=>{startNewGame();},[]);// Когда меняется цвет игрока, автоматически делаем ход компьютера если нужно\nuseEffect(()=>{if(playerColor==='b'&&game.turn()==='w'){// Игрок выбрал черные, значит компьютер должен сделать первый ход белыми\nmakeComputerMove();}},[playerColor,game.turn()]);const startNewGame=()=>{const newGame=new Chess();setGame(newGame);setIsGameOver(false);setResult(null);setIsThinking(false);};const makeComputerMove=async()=>{if(game.isGameOver())return;setIsThinking(true);try{// Сервер на Render, клиент на hardcorechess.org\nconst response=await fetch('https://hardcorechess.onrender.com/stockfish-move',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({fen:game.fen(),difficulty:difficulty})});const data=await response.json();if(data.error){console.error('Ошибка Stockfish:',data.error);setIsThinking(false);return;}// Компьютер делает ход\nconst computerMove=game.move(data.move);if(computerMove){setGame(new Chess(game.fen()));// Проверяем, не окончена ли игра после хода компьютера\nif(game.isGameOver()){setIsGameOver(true);if(game.isCheckmate()){setResult(playerColor==='w'?'Победа черных!':'Победа белых!');}else if(game.isDraw()){setResult('Ничья!');}}}}catch(error){console.error('Ошибка при получении хода компьютера:',error);}finally{setIsThinking(false);}};const handleMove=async(sourceSquare,targetSquare)=>{if(isGameOver||isThinking)return false;// Проверяем, чей ход\nif(game.turn()!==playerColor)return false;const move=game.move({from:sourceSquare,to:targetSquare});if(!move)return false;// Обновляем состояние игры\nsetGame(new Chess(game.fen()));// Проверяем, не окончена ли игра\nif(game.isGameOver()){setIsGameOver(true);if(game.isCheckmate()){setResult(playerColor==='w'?'Победа белых!':'Победа черных!');}else if(game.isDraw()){setResult('Ничья!');}return true;}// Если игра не окончена, ходит компьютер\nsetTimeout(()=>{makeComputerMove();},500);// Небольшая задержка для лучшего UX\nreturn true;};const changeDifficulty=newDifficulty=>{setDifficulty(newDifficulty);startNewGame();};const changePlayerColor=color=>{setPlayerColor(color);startNewGame();};return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),style:{position:'absolute',top:'20px',left:'20px',padding:'10px 20px',backgroundColor:'#666',color:'white',border:'none',borderRadius:'5px',cursor:'pointer'},children:\"\\u2190 \\u041D\\u0430\\u0437\\u0430\\u0434\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83E\\uDD16 \\u0418\\u0433\\u0440\\u0430 \\u043F\\u0440\\u043E\\u0442\\u0438\\u0432 \\u043A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440\\u0430\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'center',gap:'20px',marginBottom:'20px',flexWrap:'wrap'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold'},children:[\"\\u0421\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C: \",difficulty,\"/10\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"1\",max:\"10\",value:difficulty,onChange:e=>changeDifficulty(parseInt(e.target.value)),style:{width:'150px'}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold'},children:\"\\u0426\\u0432\\u0435\\u0442 \\u0444\\u0438\\u0433\\u0443\\u0440:\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>changePlayerColor('w'),style:{padding:'8px 16px',backgroundColor:playerColor==='w'?'#4CAF50':'#ddd',color:playerColor==='w'?'white':'black',border:'none',borderRadius:'5px',cursor:'pointer'},children:\"\\u0411\\u0435\\u043B\\u044B\\u0435\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>changePlayerColor('b'),style:{padding:'8px 16px',backgroundColor:playerColor==='b'?'#4CAF50':'#ddd',color:playerColor==='b'?'white':'black',border:'none',borderRadius:'5px',cursor:'pointer'},children:\"\\u0427\\u0435\\u0440\\u043D\\u044B\\u0435\"})]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:startNewGame,style:{padding:'12px 24px',fontSize:'1.1em',backgroundColor:'#FF9800',color:'white',border:'none',borderRadius:'8px',cursor:'pointer',marginBottom:'20px'},children:\"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0438\\u0433\\u0440\\u0430\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0425\\u043E\\u0434:\"}),\" \",game.turn()==='w'?'белых':'черных']}),game.turn()===playerColor?/*#__PURE__*/_jsx(\"p\",{style:{color:'#4CAF50',fontWeight:'bold'},children:\"\\u0412\\u0430\\u0448 \\u0445\\u043E\\u0434!\"}):/*#__PURE__*/_jsx(\"p\",{style:{color:'#2196F3',fontWeight:'bold'},children:isThinking?'Компьютер думает...':'Ход компьютера'})]}),/*#__PURE__*/_jsx(Chessboard,{position:game.fen(),onPieceDrop:handleMove,boardWidth:600,boardOrientation:playerColor==='w'?'white':'black'}),isGameOver&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'20px',padding:'15px',backgroundColor:'#ffebee',borderRadius:'10px',color:'#c62828',fontWeight:'bold',fontSize:'1.2em'},children:result}),isThinking&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'20px',padding:'10px',backgroundColor:'#e3f2fd',borderRadius:'8px',color:'#1976d2'},children:\"\\u041A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440 \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0438\\u0440\\u0443\\u0435\\u0442 \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u044E... \\u23F3\"})]});};export default ComputerGame;","map":{"version":3,"names":["React","useState","useEffect","Chessboard","Chess","useNavigate","jsx","_jsx","jsxs","_jsxs","ComputerGame","navigate","game","setGame","difficulty","setDifficulty","isGameOver","setIsGameOver","result","setResult","isThinking","setIsThinking","playerColor","setPlayerColor","startNewGame","turn","makeComputerMove","newGame","response","fetch","method","headers","body","JSON","stringify","fen","data","json","error","console","computerMove","move","isCheckmate","isDraw","handleMove","sourceSquare","targetSquare","from","to","setTimeout","changeDifficulty","newDifficulty","changePlayerColor","color","style","textAlign","children","onClick","position","top","left","padding","backgroundColor","border","borderRadius","cursor","display","justifyContent","gap","marginBottom","flexWrap","fontWeight","type","min","max","value","onChange","e","parseInt","target","width","fontSize","onPieceDrop","boardWidth","boardOrientation","marginTop"],"sources":["C:/Users/chich/chess-platform/client/src/components/ComputerGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ComputerGame = () => {\r\n  const navigate = useNavigate();\r\n  const [game, setGame] = useState(new Chess());\r\n  const [difficulty, setDifficulty] = useState(5);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n  const [isThinking, setIsThinking] = useState(false);\r\n  const [playerColor, setPlayerColor] = useState('w'); // w - белые, b - черные\r\n\r\n  useEffect(() => {\r\n    startNewGame();\r\n  }, []);\r\n\r\n  // Когда меняется цвет игрока, автоматически делаем ход компьютера если нужно\r\n  useEffect(() => {\r\n    if (playerColor === 'b' && game.turn() === 'w') {\r\n      // Игрок выбрал черные, значит компьютер должен сделать первый ход белыми\r\n      makeComputerMove();\r\n    }\r\n  }, [playerColor, game.turn()]);\r\n\r\n  const startNewGame = () => {\r\n    const newGame = new Chess();\r\n    setGame(newGame);\r\n    setIsGameOver(false);\r\n    setResult(null);\r\n    setIsThinking(false);\r\n  };\r\n\r\n  const makeComputerMove = async () => {\r\n    if (game.isGameOver()) return;\r\n    \r\n    setIsThinking(true);\r\n    \r\n    try {\r\n      // Сервер на Render, клиент на hardcorechess.org\r\n      const response = await fetch('https://hardcorechess.onrender.com/stockfish-move', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ \r\n          fen: game.fen(), \r\n          difficulty: difficulty \r\n        })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.error) {\r\n        console.error('Ошибка Stockfish:', data.error);\r\n        setIsThinking(false);\r\n        return;\r\n      }\r\n\r\n      // Компьютер делает ход\r\n      const computerMove = game.move(data.move);\r\n      if (computerMove) {\r\n        setGame(new Chess(game.fen()));\r\n        \r\n        // Проверяем, не окончена ли игра после хода компьютера\r\n        if (game.isGameOver()) {\r\n          setIsGameOver(true);\r\n          if (game.isCheckmate()) {\r\n            setResult(playerColor === 'w' ? 'Победа черных!' : 'Победа белых!');\r\n          } else if (game.isDraw()) {\r\n            setResult('Ничья!');\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при получении хода компьютера:', error);\r\n    } finally {\r\n      setIsThinking(false);\r\n    }\r\n  };\r\n\r\n  const handleMove = async (sourceSquare, targetSquare) => {\r\n    if (isGameOver || isThinking) return false;\r\n\r\n    // Проверяем, чей ход\r\n    if (game.turn() !== playerColor) return false;\r\n\r\n    const move = game.move({ from: sourceSquare, to: targetSquare });\r\n    if (!move) return false;\r\n\r\n    // Обновляем состояние игры\r\n    setGame(new Chess(game.fen()));\r\n    \r\n    // Проверяем, не окончена ли игра\r\n    if (game.isGameOver()) {\r\n      setIsGameOver(true);\r\n      if (game.isCheckmate()) {\r\n        setResult(playerColor === 'w' ? 'Победа белых!' : 'Победа черных!');\r\n      } else if (game.isDraw()) {\r\n        setResult('Ничья!');\r\n      }\r\n      return true;\r\n    }\r\n\r\n    // Если игра не окончена, ходит компьютер\r\n    setTimeout(() => {\r\n      makeComputerMove();\r\n    }, 500); // Небольшая задержка для лучшего UX\r\n\r\n    return true;\r\n  };\r\n\r\n  const changeDifficulty = (newDifficulty) => {\r\n    setDifficulty(newDifficulty);\r\n    startNewGame();\r\n  };\r\n\r\n  const changePlayerColor = (color) => {\r\n    setPlayerColor(color);\r\n    startNewGame();\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <button \r\n        onClick={() => navigate('/')}\r\n        style={{\r\n          position: 'absolute',\r\n          top: '20px',\r\n          left: '20px',\r\n          padding: '10px 20px',\r\n          backgroundColor: '#666',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '5px',\r\n          cursor: 'pointer'\r\n        }}\r\n      >\r\n        ← Назад\r\n      </button>\r\n      \r\n      <h2>🤖 Игра против компьютера</h2>\r\n      \r\n      {/* Настройки игры */}\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'center', \r\n        gap: '20px', \r\n        marginBottom: '20px',\r\n        flexWrap: 'wrap'\r\n      }}>\r\n        <div>\r\n          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\r\n            Сложность: {difficulty}/10\r\n          </label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"1\"\r\n            max=\"10\"\r\n            value={difficulty}\r\n            onChange={(e) => changeDifficulty(parseInt(e.target.value))}\r\n            style={{ width: '150px' }}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\r\n            Цвет фигур:\r\n          </label>\r\n          <div style={{ display: 'flex', gap: '10px' }}>\r\n            <button\r\n              onClick={() => changePlayerColor('w')}\r\n              style={{\r\n                padding: '8px 16px',\r\n                backgroundColor: playerColor === 'w' ? '#4CAF50' : '#ddd',\r\n                color: playerColor === 'w' ? 'white' : 'black',\r\n                border: 'none',\r\n                borderRadius: '5px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              Белые\r\n            </button>\r\n            <button\r\n              onClick={() => changePlayerColor('b')}\r\n              style={{\r\n                padding: '8px 16px',\r\n                backgroundColor: playerColor === 'b' ? '#4CAF50' : '#ddd',\r\n                color: playerColor === 'b' ? 'white' : 'black',\r\n                border: 'none',\r\n                borderRadius: '5px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              Черные\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <button\r\n        onClick={startNewGame}\r\n        style={{\r\n          padding: '12px 24px',\r\n          fontSize: '1.1em',\r\n          backgroundColor: '#FF9800',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '8px',\r\n          cursor: 'pointer',\r\n          marginBottom: '20px'\r\n        }}\r\n      >\r\n        Новая игра\r\n      </button>\r\n      \r\n      {/* Информация о текущем состоянии */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <p><strong>Ход:</strong> {game.turn() === 'w' ? 'белых' : 'черных'}</p>\r\n        {game.turn() === playerColor ? (\r\n          <p style={{ color: '#4CAF50', fontWeight: 'bold' }}>Ваш ход!</p>\r\n        ) : (\r\n          <p style={{ color: '#2196F3', fontWeight: 'bold' }}>\r\n            {isThinking ? 'Компьютер думает...' : 'Ход компьютера'}\r\n          </p>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Шахматная доска */}\r\n      <Chessboard\r\n        position={game.fen()}\r\n        onPieceDrop={handleMove}\r\n        boardWidth={600}\r\n        boardOrientation={playerColor === 'w' ? 'white' : 'black'}\r\n      />\r\n      \r\n      {/* Результат игры */}\r\n      {isGameOver && (\r\n        <div style={{ \r\n          marginTop: '20px', \r\n          padding: '15px',\r\n          backgroundColor: '#ffebee',\r\n          borderRadius: '10px',\r\n          color: '#c62828',\r\n          fontWeight: 'bold',\r\n          fontSize: '1.2em'\r\n        }}>\r\n          {result}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Индикатор загрузки */}\r\n      {isThinking && (\r\n        <div style={{ \r\n          marginTop: '20px', \r\n          padding: '10px',\r\n          backgroundColor: '#e3f2fd',\r\n          borderRadius: '8px',\r\n          color: '#1976d2'\r\n        }}>\r\n          Компьютер анализирует позицию... ⏳\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComputerGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}