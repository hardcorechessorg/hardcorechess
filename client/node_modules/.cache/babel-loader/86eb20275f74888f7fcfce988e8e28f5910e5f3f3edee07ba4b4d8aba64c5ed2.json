{"ast":null,"code":"var _jsxFileName = \"/home/kirtan-rasa/hardcorechess/client/src/components/ComputerGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatMs = ms => {\n  const s = Math.max(0, Math.floor(ms / 1000));\n  const m = Math.floor(s / 60);\n  const sec = s % 60;\n  return `${m}:${sec.toString().padStart(2, '0')}`;\n};\nconst pairMoves = sans => {\n  const rows = [];\n  for (let i = 0; i < sans.length; i += 2) {\n    rows.push({\n      no: Math.floor(i / 2) + 1,\n      w: sans[i] || '',\n      b: sans[i + 1] || ''\n    });\n  }\n  return rows;\n};\nconst ComputerGame = () => {\n  _s();\n  const navigate = useNavigate();\n  const [game, setGame] = useState(new Chess());\n  const [difficulty, setDifficulty] = useState(5);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [result, setResult] = useState(null);\n  const [isThinking, setIsThinking] = useState(false);\n  const [playerColor, setPlayerColor] = useState('w'); // w - белые, b - черные\n  const [isStockfishReady, setIsStockfishReady] = useState(false);\n  const [isLoadingStockfish, setIsLoadingStockfish] = useState(true);\n  const stockfishRef = useRef(null);\n\n  // Контроль времени\n  const [minutes, setMinutes] = useState(5);\n  const [increment, setIncrement] = useState(0);\n  const [clock, setClock] = useState({\n    wMs: minutes * 60000,\n    bMs: minutes * 60000\n  });\n  const [lastTurnStartAt, setLastTurnStartAt] = useState(null);\n  const [tick, setTick] = useState(0);\n\n  // История ходов (SAN)\n  const [movesSan, setMovesSan] = useState([]);\n\n  // Инициализация Stockfish (упрощенная версия как в Lichess)\n  useEffect(() => {\n    const initStockfish = async () => {\n      try {\n        setIsLoadingStockfish(true);\n\n        // Простая реализация без сложных fallback'ов\n        const loadStockfish = () => {\n          return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.src = '/stockfish-nnue-16-single.js';\n            script.onload = () => {\n              console.log('Stockfish скрипт загружен');\n              resolve();\n            };\n            script.onerror = () => {\n              console.log('Ошибка загрузки Stockfish, используем простой ИИ');\n              reject(new Error('Stockfish не загружен'));\n            };\n            document.head.appendChild(script);\n          });\n        };\n        try {\n          await loadStockfish();\n\n          // Ждем инициализации\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          if (window.Stockfish) {\n            const stockfish = new window.Stockfish();\n            stockfishRef.current = stockfish;\n            stockfish.onmessage = event => {\n              const message = event.data || event;\n              if (message.includes('uciok')) {\n                console.log('Stockfish готов к работе');\n                setIsStockfishReady(true);\n                setIsLoadingStockfish(false);\n              }\n            };\n            stockfish.postMessage('uci');\n          } else {\n            throw new Error('Stockfish не найден в window');\n          }\n        } catch (error) {\n          console.log('Stockfish недоступен, используем простой ИИ');\n          setIsLoadingStockfish(false);\n        }\n      } catch (error) {\n        console.error('Ошибка инициализации:', error);\n        setIsLoadingStockfish(false);\n      }\n    };\n    initStockfish();\n    return () => {\n      if (stockfishRef.current) {\n        stockfishRef.current.terminate();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (isStockfishReady) {\n      startNewGame();\n    }\n  }, [isStockfishReady]);\n  useEffect(() => {\n    if (!isGameOver && playerColor === 'b' && game.turn() === 'w') {\n      makeComputerMove();\n    }\n  }, [playerColor]);\n  useEffect(() => {\n    const id = setInterval(() => setTick(t => t + 1), 200);\n    return () => clearInterval(id);\n  }, []);\n  const displayedClock = useMemo(() => {\n    if (isGameOver || lastTurnStartAt == null) return clock;\n    const now = Date.now();\n    const elapsed = Math.max(0, now - lastTurnStartAt);\n    if (game.turn() === 'w') {\n      return {\n        wMs: Math.max(0, clock.wMs - elapsed),\n        bMs: clock.bMs\n      };\n    } else {\n      return {\n        wMs: clock.wMs,\n        bMs: Math.max(0, clock.bMs - elapsed)\n      };\n    }\n  }, [clock, lastTurnStartAt, isGameOver, game, tick]);\n  const resetClocks = (mins, inc) => {\n    const ms = mins * 60000;\n    setClock({\n      wMs: ms,\n      bMs: ms\n    });\n    setLastTurnStartAt(Date.now());\n  };\n  const startNewGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setIsGameOver(false);\n    setResult(null);\n    setIsThinking(false);\n    setMovesSan([]);\n    resetClocks(minutes, increment);\n    if (playerColor === 'b') {\n      setTimeout(() => makeComputerMove(), 50);\n    }\n  };\n  const finishOnTime = loser => {\n    setIsGameOver(true);\n    setResult(loser === 'w' ? 'Поражение по времени (белые)' : 'Поражение по времени (чёрные)');\n  };\n  const settleTimeAfterMove = movedColor => {\n    const now = Date.now();\n    if (lastTurnStartAt != null) {\n      const elapsed = now - lastTurnStartAt;\n      if (movedColor === 'w') {\n        const newW = Math.max(0, clock.wMs - elapsed) + increment * 1000;\n        if (newW <= 0) {\n          finishOnTime('w');\n          return false;\n        }\n        setClock({\n          wMs: newW,\n          bMs: clock.bMs\n        });\n      } else {\n        const newB = Math.max(0, clock.bMs - elapsed) + increment * 1000;\n        if (newB <= 0) {\n          finishOnTime('b');\n          return false;\n        }\n        setClock({\n          wMs: clock.wMs,\n          bMs: newB\n        });\n      }\n    }\n    setLastTurnStartAt(now);\n    return true;\n  };\n  const makeSimpleComputerMove = () => {\n    if (isGameOver || game.isGameOver()) return;\n    setIsThinking(true);\n    setTimeout(() => {\n      try {\n        const moves = game.moves();\n        if (moves.length > 0) {\n          // Простой алгоритм: случайный ход с небольшим приоритетом для взятий\n          const captures = moves.filter(move => {\n            const testGame = new Chess(game.fen());\n            const moveObj = testGame.move(move);\n            return moveObj && moveObj.captured;\n          });\n          const moveToPlay = captures.length > 0 && Math.random() < 0.7 ? captures[Math.floor(Math.random() * captures.length)] : moves[Math.floor(Math.random() * moves.length)];\n          const move = game.move(moveToPlay);\n          if (move) {\n            setMovesSan(prev => [...prev, move.san]);\n            setGame(new Chess(game.fen()));\n            const compColor = move.color;\n            if (!settleTimeAfterMove(compColor)) {\n              setIsThinking(false);\n              return;\n            }\n            if (game.isGameOver()) {\n              setIsGameOver(true);\n              if (game.isCheckmate()) {\n                setResult(playerColor === 'w' ? 'Победа чёрных!' : 'Победа белых!');\n              } else if (game.isDraw()) {\n                setResult('Ничья!');\n              }\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Ошибка простого хода:', error);\n      } finally {\n        setIsThinking(false);\n      }\n    }, 500 + Math.random() * 1000); // Имитация размышления\n  };\n  const makeComputerMove = async () => {\n    try {\n      if (isGameOver || game.isGameOver()) return;\n\n      // Если Stockfish не готов, используем простой алгоритм\n      if (!isStockfishReady || !stockfishRef.current) {\n        makeSimpleComputerMove();\n        return;\n      }\n      if (game.turn() !== playerColor) {\n        const now = Date.now();\n        if (lastTurnStartAt != null) {\n          const elapsed = now - lastTurnStartAt;\n          const compColor = playerColor === 'w' ? 'b' : 'w';\n          const compMs = compColor === 'w' ? clock.wMs : clock.bMs;\n          if (compMs - elapsed <= 0) {\n            finishOnTime(compColor);\n            return;\n          }\n        }\n      }\n      setIsThinking(true);\n      return new Promise(resolve => {\n        const stockfish = stockfishRef.current;\n        let bestMove = null;\n        let resolved = false;\n\n        // Таймаут для Stockfish (максимум 3 секунды)\n        const timeout = setTimeout(() => {\n          if (!resolved) {\n            console.log('Stockfish timeout, используем простой алгоритм');\n            makeSimpleComputerMove();\n            resolve();\n          }\n        }, 3000);\n        const handleMessage = event => {\n          const message = event.data || event;\n          if (message.includes('bestmove')) {\n            if (resolved) return;\n            resolved = true;\n            clearTimeout(timeout);\n            const parts = message.split(' ');\n            if (parts.length >= 2) {\n              bestMove = parts[1];\n            }\n            if (bestMove && bestMove !== 'null') {\n              try {\n                const move = game.move(bestMove);\n                if (move) {\n                  setMovesSan(prev => [...prev, move.san]);\n                  setGame(new Chess(game.fen()));\n                  const compColor = move.color;\n                  if (!settleTimeAfterMove(compColor)) {\n                    setIsThinking(false);\n                    resolve();\n                    return;\n                  }\n                  if (game.isGameOver()) {\n                    setIsGameOver(true);\n                    if (game.isCheckmate()) {\n                      setResult(playerColor === 'w' ? 'Победа чёрных!' : 'Победа белых!');\n                    } else if (game.isDraw()) {\n                      setResult('Ничья!');\n                    }\n                  }\n                }\n              } catch (error) {\n                console.error('Ошибка выполнения хода:', error);\n              }\n            }\n            setIsThinking(false);\n            resolve();\n          }\n        };\n        stockfish.onmessage = handleMessage;\n\n        // Настройка сложности (упрощенная версия)\n        const depth = difficulty >= 7 ? 6 : difficulty >= 4 ? 4 : 2;\n        const skillLevel = Math.min(20, difficulty * 2);\n        stockfish.postMessage('setoption name Skill Level value ' + skillLevel);\n        stockfish.postMessage('position fen ' + game.fen());\n        stockfish.postMessage('go depth ' + depth);\n      });\n    } catch (error) {\n      console.error('Ошибка в makeComputerMove:', error);\n      setIsThinking(false);\n    }\n  };\n  const handleMove = async (sourceSquare, targetSquare) => {\n    try {\n      if (isGameOver || isThinking) return false;\n      if (game.turn() !== playerColor) return false;\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare\n      });\n      if (!move) return false;\n      setMovesSan(prev => [...prev, move.san]);\n      setGame(new Chess(game.fen()));\n      if (!settleTimeAfterMove(move.color)) return true;\n      if (game.isGameOver()) {\n        setIsGameOver(true);\n        if (game.isCheckmate()) {\n          setResult(playerColor === 'w' ? 'Победа белых!' : 'Победа чёрных!');\n        } else if (game.isDraw()) {\n          setResult('Ничья!');\n        }\n        return true;\n      }\n      setTimeout(() => {\n        makeComputerMove();\n      }, 200);\n      return true;\n    } catch (error) {\n      // Просто возвращаем false, фигура вернется на место\n      console.log('Неправильный ход:', error.message);\n      return false;\n    }\n  };\n  const changeDifficulty = newDifficulty => {\n    setDifficulty(newDifficulty);\n    startNewGame();\n  };\n  const changePlayerColor = color => {\n    setPlayerColor(color);\n    startNewGame();\n  };\n  const rows = useMemo(() => pairMoves(movesSan), [movesSan]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      className: \"button\",\n      style: {\n        marginBottom: 12\n      },\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0418\\u0433\\u0440\\u0430 \\u043F\\u0440\\u043E\\u0442\\u0438\\u0432 \\u043A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), isLoadingStockfish && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      style: {\n        marginBottom: 16,\n        color: '#8ab4f8'\n      },\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043B\\u0435\\u0433\\u043A\\u043E\\u0439 \\u0432\\u0435\\u0440\\u0441\\u0438\\u0438 Stockfish...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }, this), !isStockfishReady && !isLoadingStockfish && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      style: {\n        marginBottom: 16,\n        color: '#ffa726'\n      },\n      children: [\"\\u26A0\\uFE0F Stockfish \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D. \\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \\u0443\\u043F\\u0440\\u043E\\u0449\\u0435\\u043D\\u043D\\u044B\\u0439 \\u0418\\u0418.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"\\u0418\\u0433\\u0440\\u0430 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0442\\u044C, \\u043D\\u043E \\u043A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0438\\u0433\\u0440\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0449\\u0435.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0441\\u043E\\u043B\\u044C \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u0430 (F12) \\u0434\\u043B\\u044F \\u0434\\u0438\\u0430\\u0433\\u043D\\u043E\\u0441\\u0442\\u0438\\u043A\\u0438.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"\\u041D\\u0430 \\u043F\\u0440\\u043E\\u0434\\u0430\\u043A\\u0448\\u043D \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0435 Stockfish \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0442\\u044C \\u043B\\u0443\\u0447\\u0448\\u0435.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            gap: 16,\n            marginBottom: 16,\n            flexWrap: 'wrap'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: 6,\n                fontWeight: 'bold'\n              },\n              children: [\"\\u0421\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C: \", difficulty, \"/10\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              value: difficulty,\n              onChange: e => changeDifficulty(parseInt(e.target.value)),\n              style: {\n                width: 180\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: 6,\n                fontWeight: 'bold'\n              },\n              children: \"\\u0426\\u0432\\u0435\\u0442 \\u0444\\u0438\\u0433\\u0443\\u0440:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changePlayerColor('w'),\n                className: `button ${playerColor === 'w' ? 'primary' : ''}`,\n                children: \"\\u0411\\u0435\\u043B\\u044B\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changePlayerColor('b'),\n                className: `button ${playerColor === 'b' ? 'primary' : ''}`,\n                children: \"\\u0427\\u0451\\u0440\\u043D\\u044B\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: 6,\n                fontWeight: 'bold'\n              },\n              children: \"\\u041A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u044C \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 8,\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: 1,\n                max: 180,\n                value: minutes,\n                onChange: e => {\n                  setMinutes(Number(e.target.value));\n                  resetClocks(Number(e.target.value), increment);\n                },\n                style: {\n                  width: 80,\n                  padding: '8px',\n                  borderRadius: 6,\n                  border: '1px solid #3a3a3a',\n                  background: '#2a2a2a',\n                  color: '#e6e6e6'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"kicker\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: 0,\n                max: 60,\n                value: increment,\n                onChange: e => {\n                  setIncrement(Number(e.target.value));\n                },\n                style: {\n                  width: 100,\n                  padding: '8px',\n                  borderRadius: 6,\n                  border: '1px solid #3a3a3a',\n                  background: '#2a2a2a',\n                  color: '#e6e6e6'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"kicker\",\n                children: \"\\u0441\\u0435\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startNewGame,\n          className: \"button\",\n          style: {\n            marginBottom: 12\n          },\n          children: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0438\\u0433\\u0440\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-responsive\",\n          children: /*#__PURE__*/_jsxDEV(Chessboard, {\n            position: game.fen(),\n            onPieceDrop: handleMove,\n            boardWidth: 650,\n            boardOrientation: playerColor === 'w' ? 'white' : 'black'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          style: {\n            marginTop: 12,\n            color: '#ff8a80',\n            fontWeight: 'bold'\n          },\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), isThinking && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          style: {\n            marginTop: 12,\n            color: '#8ab4f8'\n          },\n          children: \"\\u041A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440 \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0438\\u0440\\u0443\\u0435\\u0442 \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u044E\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel game-clock\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"\\u0427\\u0430\\u0441\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u0411\\u0435\\u043B\\u044B\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: formatMs(displayedClock.wMs)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u0427\\u0451\\u0440\\u043D\\u044B\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: formatMs(displayedClock.bMs)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel game-history\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u0445\\u043E\\u0434\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), rows.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"kicker\",\n            children: \"\\u041F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u0445\\u043E\\u0434\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              width: '100%',\n              borderCollapse: 'collapse'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'left',\n                    width: 40\n                  },\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'left'\n                  },\n                  children: \"\\u0411\\u0435\\u043B\\u044B\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'left'\n                  },\n                  children: \"\\u0427\\u0451\\u0440\\u043D\\u044B\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: rows.map(r => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [r.no, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: r.w\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: r.b\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 23\n                }, this)]\n              }, r.no, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this);\n};\n_s(ComputerGame, \"2xHLSj1OlPjQNVgMNA/fhy3qk2g=\", false, function () {\n  return [useNavigate];\n});\n_c = ComputerGame;\nexport default ComputerGame;\nvar _c;\n$RefreshReg$(_c, \"ComputerGame\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","Chessboard","Chess","useNavigate","jsxDEV","_jsxDEV","formatMs","ms","s","Math","max","floor","m","sec","toString","padStart","pairMoves","sans","rows","i","length","push","no","w","b","ComputerGame","_s","navigate","game","setGame","difficulty","setDifficulty","isGameOver","setIsGameOver","result","setResult","isThinking","setIsThinking","playerColor","setPlayerColor","isStockfishReady","setIsStockfishReady","isLoadingStockfish","setIsLoadingStockfish","stockfishRef","minutes","setMinutes","increment","setIncrement","clock","setClock","wMs","bMs","lastTurnStartAt","setLastTurnStartAt","tick","setTick","movesSan","setMovesSan","initStockfish","loadStockfish","Promise","resolve","reject","script","document","createElement","src","onload","console","log","onerror","Error","head","appendChild","setTimeout","window","Stockfish","stockfish","current","onmessage","event","message","data","includes","postMessage","error","terminate","startNewGame","turn","makeComputerMove","id","setInterval","t","clearInterval","displayedClock","now","Date","elapsed","resetClocks","mins","inc","newGame","finishOnTime","loser","settleTimeAfterMove","movedColor","newW","newB","makeSimpleComputerMove","moves","captures","filter","move","testGame","fen","moveObj","captured","moveToPlay","random","prev","san","compColor","color","isCheckmate","isDraw","compMs","bestMove","resolved","timeout","handleMessage","clearTimeout","parts","split","depth","skillLevel","min","handleMove","sourceSquare","targetSquare","from","to","changeDifficulty","newDifficulty","changePlayerColor","className","children","onClick","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","flexWrap","fontWeight","type","value","onChange","e","parseInt","target","width","alignItems","Number","padding","borderRadius","border","background","position","onPieceDrop","boardWidth","boardOrientation","marginTop","flexDirection","borderCollapse","textAlign","map","r","_c","$RefreshReg$"],"sources":["/home/kirtan-rasa/hardcorechess/client/src/components/ComputerGame.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport { useNavigate } from 'react-router-dom';\n\nconst formatMs = (ms) => {\n  const s = Math.max(0, Math.floor(ms / 1000));\n  const m = Math.floor(s / 60);\n  const sec = s % 60;\n  return `${m}:${sec.toString().padStart(2, '0')}`;\n};\n\nconst pairMoves = (sans) => {\n  const rows = [];\n  for (let i = 0; i < sans.length; i += 2) {\n    rows.push({ no: Math.floor(i / 2) + 1, w: sans[i] || '', b: sans[i + 1] || '' });\n  }\n  return rows;\n};\n\nconst ComputerGame = () => {\n  const navigate = useNavigate();\n  const [game, setGame] = useState(new Chess());\n  const [difficulty, setDifficulty] = useState(5);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [result, setResult] = useState(null);\n  const [isThinking, setIsThinking] = useState(false);\n  const [playerColor, setPlayerColor] = useState('w'); // w - белые, b - черные\n  const [isStockfishReady, setIsStockfishReady] = useState(false);\n  const [isLoadingStockfish, setIsLoadingStockfish] = useState(true);\n  const stockfishRef = useRef(null);\n\n  // Контроль времени\n  const [minutes, setMinutes] = useState(5);\n  const [increment, setIncrement] = useState(0);\n  const [clock, setClock] = useState({ wMs: minutes * 60000, bMs: minutes * 60000 });\n  const [lastTurnStartAt, setLastTurnStartAt] = useState(null);\n  const [tick, setTick] = useState(0);\n\n  // История ходов (SAN)\n  const [movesSan, setMovesSan] = useState([]);\n\n  // Инициализация Stockfish (упрощенная версия как в Lichess)\n  useEffect(() => {\n    const initStockfish = async () => {\n      try {\n        setIsLoadingStockfish(true);\n        \n        // Простая реализация без сложных fallback'ов\n        const loadStockfish = () => {\n          return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.src = '/stockfish-nnue-16-single.js';\n            \n            script.onload = () => {\n              console.log('Stockfish скрипт загружен');\n              resolve();\n            };\n            \n            script.onerror = () => {\n              console.log('Ошибка загрузки Stockfish, используем простой ИИ');\n              reject(new Error('Stockfish не загружен'));\n            };\n            \n            document.head.appendChild(script);\n          });\n        };\n        \n        try {\n          await loadStockfish();\n          \n          // Ждем инициализации\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          if (window.Stockfish) {\n            const stockfish = new window.Stockfish();\n            stockfishRef.current = stockfish;\n            \n            stockfish.onmessage = (event) => {\n              const message = event.data || event;\n              if (message.includes('uciok')) {\n                console.log('Stockfish готов к работе');\n                setIsStockfishReady(true);\n                setIsLoadingStockfish(false);\n              }\n            };\n            \n            stockfish.postMessage('uci');\n          } else {\n            throw new Error('Stockfish не найден в window');\n          }\n        } catch (error) {\n          console.log('Stockfish недоступен, используем простой ИИ');\n          setIsLoadingStockfish(false);\n        }\n      } catch (error) {\n        console.error('Ошибка инициализации:', error);\n        setIsLoadingStockfish(false);\n      }\n    };\n    \n    initStockfish();\n    \n    return () => {\n      if (stockfishRef.current) {\n        stockfishRef.current.terminate();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isStockfishReady) {\n      startNewGame();\n    }\n  }, [isStockfishReady]);\n\n  useEffect(() => {\n    if (!isGameOver && playerColor === 'b' && game.turn() === 'w') {\n      makeComputerMove();\n    }\n  }, [playerColor]);\n\n  useEffect(() => {\n    const id = setInterval(() => setTick((t) => t + 1), 200);\n    return () => clearInterval(id);\n  }, []);\n\n  const displayedClock = useMemo(() => {\n    if (isGameOver || lastTurnStartAt == null) return clock;\n    const now = Date.now();\n    const elapsed = Math.max(0, now - lastTurnStartAt);\n    if (game.turn() === 'w') {\n      return { wMs: Math.max(0, clock.wMs - elapsed), bMs: clock.bMs };\n    } else {\n      return { wMs: clock.wMs, bMs: Math.max(0, clock.bMs - elapsed) };\n    }\n  }, [clock, lastTurnStartAt, isGameOver, game, tick]);\n\n  const resetClocks = (mins, inc) => {\n    const ms = mins * 60000;\n    setClock({ wMs: ms, bMs: ms });\n    setLastTurnStartAt(Date.now());\n  };\n\n  const startNewGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setIsGameOver(false);\n    setResult(null);\n    setIsThinking(false);\n    setMovesSan([]);\n    resetClocks(minutes, increment);\n    if (playerColor === 'b') {\n      setTimeout(() => makeComputerMove(), 50);\n    }\n  };\n\n  const finishOnTime = (loser) => {\n    setIsGameOver(true);\n    setResult(loser === 'w' ? 'Поражение по времени (белые)' : 'Поражение по времени (чёрные)');\n  };\n\n  const settleTimeAfterMove = (movedColor) => {\n    const now = Date.now();\n    if (lastTurnStartAt != null) {\n      const elapsed = now - lastTurnStartAt;\n      if (movedColor === 'w') {\n        const newW = Math.max(0, clock.wMs - elapsed) + increment * 1000;\n        if (newW <= 0) { finishOnTime('w'); return false; }\n        setClock({ wMs: newW, bMs: clock.bMs });\n      } else {\n        const newB = Math.max(0, clock.bMs - elapsed) + increment * 1000;\n        if (newB <= 0) { finishOnTime('b'); return false; }\n        setClock({ wMs: clock.wMs, bMs: newB });\n      }\n    }\n    setLastTurnStartAt(now);\n    return true;\n  };\n\n  const makeSimpleComputerMove = () => {\n    if (isGameOver || game.isGameOver()) return;\n    \n    setIsThinking(true);\n    \n    setTimeout(() => {\n      try {\n        const moves = game.moves();\n        if (moves.length > 0) {\n          // Простой алгоритм: случайный ход с небольшим приоритетом для взятий\n          const captures = moves.filter(move => {\n            const testGame = new Chess(game.fen());\n            const moveObj = testGame.move(move);\n            return moveObj && moveObj.captured;\n          });\n          \n          const moveToPlay = captures.length > 0 && Math.random() < 0.7 \n            ? captures[Math.floor(Math.random() * captures.length)]\n            : moves[Math.floor(Math.random() * moves.length)];\n          \n          const move = game.move(moveToPlay);\n          if (move) {\n            setMovesSan(prev => [...prev, move.san]);\n            setGame(new Chess(game.fen()));\n            const compColor = move.color;\n            if (!settleTimeAfterMove(compColor)) {\n              setIsThinking(false);\n              return;\n            }\n\n            if (game.isGameOver()) {\n              setIsGameOver(true);\n              if (game.isCheckmate()) {\n                setResult(playerColor === 'w' ? 'Победа чёрных!' : 'Победа белых!');\n              } else if (game.isDraw()) {\n                setResult('Ничья!');\n              }\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Ошибка простого хода:', error);\n      } finally {\n        setIsThinking(false);\n      }\n    }, 500 + Math.random() * 1000); // Имитация размышления\n  };\n\n  const makeComputerMove = async () => {\n    try {\n      if (isGameOver || game.isGameOver()) return;\n      \n      // Если Stockfish не готов, используем простой алгоритм\n      if (!isStockfishReady || !stockfishRef.current) {\n        makeSimpleComputerMove();\n        return;\n      }\n\n      if (game.turn() !== playerColor) {\n        const now = Date.now();\n        if (lastTurnStartAt != null) {\n          const elapsed = now - lastTurnStartAt;\n          const compColor = playerColor === 'w' ? 'b' : 'w';\n          const compMs = compColor === 'w' ? clock.wMs : clock.bMs;\n          if (compMs - elapsed <= 0) {\n            finishOnTime(compColor);\n            return;\n          }\n        }\n      }\n\n      setIsThinking(true);\n      \n      return new Promise((resolve) => {\n        const stockfish = stockfishRef.current;\n        let bestMove = null;\n        let resolved = false;\n        \n        // Таймаут для Stockfish (максимум 3 секунды)\n        const timeout = setTimeout(() => {\n          if (!resolved) {\n            console.log('Stockfish timeout, используем простой алгоритм');\n            makeSimpleComputerMove();\n            resolve();\n          }\n        }, 3000);\n        \n        const handleMessage = (event) => {\n          const message = event.data || event;\n          \n          if (message.includes('bestmove')) {\n            if (resolved) return;\n            resolved = true;\n            clearTimeout(timeout);\n            \n            const parts = message.split(' ');\n            if (parts.length >= 2) {\n              bestMove = parts[1];\n            }\n            \n            if (bestMove && bestMove !== 'null') {\n              try {\n                const move = game.move(bestMove);\n                if (move) {\n                  setMovesSan(prev => [...prev, move.san]);\n                  setGame(new Chess(game.fen()));\n                  const compColor = move.color;\n                  if (!settleTimeAfterMove(compColor)) {\n                    setIsThinking(false);\n                    resolve();\n                    return;\n                  }\n\n                  if (game.isGameOver()) {\n                    setIsGameOver(true);\n                    if (game.isCheckmate()) {\n                      setResult(playerColor === 'w' ? 'Победа чёрных!' : 'Победа белых!');\n                    } else if (game.isDraw()) {\n                      setResult('Ничья!');\n                    }\n                  }\n                }\n              } catch (error) {\n                console.error('Ошибка выполнения хода:', error);\n              }\n            }\n            \n            setIsThinking(false);\n            resolve();\n          }\n        };\n        \n        stockfish.onmessage = handleMessage;\n        \n        // Настройка сложности (упрощенная версия)\n        const depth = difficulty >= 7 ? 6 : difficulty >= 4 ? 4 : 2;\n        const skillLevel = Math.min(20, difficulty * 2);\n        \n        stockfish.postMessage('setoption name Skill Level value ' + skillLevel);\n        stockfish.postMessage('position fen ' + game.fen());\n        stockfish.postMessage('go depth ' + depth);\n      });\n    } catch (error) {\n      console.error('Ошибка в makeComputerMove:', error);\n      setIsThinking(false);\n    }\n  };\n\n  const handleMove = async (sourceSquare, targetSquare) => {\n    try {\n      if (isGameOver || isThinking) return false;\n      if (game.turn() !== playerColor) return false;\n\n      const move = game.move({ from: sourceSquare, to: targetSquare });\n      if (!move) return false;\n\n      setMovesSan(prev => [...prev, move.san]);\n      setGame(new Chess(game.fen()));\n\n      if (!settleTimeAfterMove(move.color)) return true;\n\n      if (game.isGameOver()) {\n        setIsGameOver(true);\n        if (game.isCheckmate()) {\n          setResult(playerColor === 'w' ? 'Победа белых!' : 'Победа чёрных!');\n        } else if (game.isDraw()) {\n          setResult('Ничья!');\n        }\n        return true;\n      }\n\n      setTimeout(() => { makeComputerMove(); }, 200);\n      return true;\n    } catch (error) {\n      // Просто возвращаем false, фигура вернется на место\n      console.log('Неправильный ход:', error.message);\n      return false;\n    }\n  };\n\n  const changeDifficulty = (newDifficulty) => {\n    setDifficulty(newDifficulty);\n    startNewGame();\n  };\n\n  const changePlayerColor = (color) => {\n    setPlayerColor(color);\n    startNewGame();\n  };\n\n  const rows = useMemo(() => pairMoves(movesSan), [movesSan]);\n\n  return (\n    <div className=\"section\">\n      <button \n        onClick={() => navigate('/')}\n        className=\"button\"\n        style={{ marginBottom: 12 }}\n      >\n        Назад\n      </button>\n      \n      <h2>Игра против компьютера</h2>\n\n      {isLoadingStockfish && (\n        <div className=\"panel\" style={{ marginBottom: 16, color: '#8ab4f8' }}>\n          Загрузка легкой версии Stockfish...\n        </div>\n      )}\n\n      {!isStockfishReady && !isLoadingStockfish && (\n        <div className=\"panel\" style={{ marginBottom: 16, color: '#ffa726' }}>\n          ⚠️ Stockfish не загружен. Используется упрощенный ИИ.\n          <br />\n          <small>Игра будет работать, но компьютер будет играть проще.</small>\n          <br />\n          <small>Откройте консоль браузера (F12) для диагностики.</small>\n          <br />\n          <small>На продакшн сервере Stockfish должен работать лучше.</small>\n        </div>\n      )}\n\n      <div className=\"game-layout\">\n        <div className=\"game-board\">\n          <div style={{ display: 'flex', justifyContent: 'center', gap: 16, marginBottom: 16, flexWrap: 'wrap' }}>\n            <div className=\"panel\">\n              <label style={{ display: 'block', marginBottom: 6, fontWeight: 'bold' }}>\n                Сложность: {difficulty}/10\n              </label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={difficulty}\n                onChange={(e) => changeDifficulty(parseInt(e.target.value))}\n                style={{ width: 180 }}\n              />\n            </div>\n            \n            <div className=\"panel\">\n              <label style={{ display: 'block', marginBottom: 6, fontWeight: 'bold' }}>\n                Цвет фигур:\n              </label>\n              <div style={{ display: 'flex', gap: 8 }}>\n                <button\n                  onClick={() => changePlayerColor('w')}\n                  className={`button ${playerColor === 'w' ? 'primary' : ''}`}\n                >\n                  Белые\n                </button>\n                <button\n                  onClick={() => changePlayerColor('b')}\n                  className={`button ${playerColor === 'b' ? 'primary' : ''}`}\n                >\n                  Чёрные\n                </button>\n              </div>\n            </div>\n\n            <div className=\"panel\">\n              <label style={{ display: 'block', marginBottom: 6, fontWeight: 'bold' }}>Контроль времени</label>\n              <div style={{ display: 'flex', gap: 8, alignItems: 'center' }}>\n                <input type=\"number\" min={1} max={180} value={minutes}\n                  onChange={(e) => { setMinutes(Number(e.target.value)); resetClocks(Number(e.target.value), increment); }}\n                  style={{ width: 80, padding: '8px', borderRadius: 6, border: '1px solid #3a3a3a', background: '#2a2a2a', color: '#e6e6e6' }} />\n                <span className=\"kicker\">+</span>\n                <input type=\"number\" min={0} max={60} value={increment}\n                  onChange={(e) => { setIncrement(Number(e.target.value)); }}\n                  style={{ width: 100, padding: '8px', borderRadius: 6, border: '1px solid #3a3a3a', background: '#2a2a2a', color: '#e6e6e6' }} />\n                <span className=\"kicker\">сек</span>\n              </div>\n            </div>\n          </div>\n          \n          <button onClick={startNewGame} className=\"button\" style={{ marginBottom: 12 }}>\n            Новая игра\n          </button>\n          \n          <div className=\"board-responsive\">\n            <Chessboard\n              position={game.fen()}\n              onPieceDrop={handleMove}\n              boardWidth={650}\n              boardOrientation={playerColor === 'w' ? 'white' : 'black'}\n            />\n          </div>\n\n          {isGameOver && (\n            <div className=\"panel\" style={{ marginTop: 12, color: '#ff8a80', fontWeight: 'bold' }}>\n              {result}\n            </div>\n          )}\n          \n          {isThinking && (\n            <div className=\"panel\" style={{ marginTop: 12, color: '#8ab4f8' }}>\n              Компьютер анализирует позицию…\n            </div>\n          )}\n        </div>\n\n        <div className=\"game-sidebar\">\n          <div className=\"panel game-clock\">\n            <h3 style={{ marginTop: 0 }}>Часы</h3>\n            <div style={{ display: 'flex', flexDirection: 'column', gap: 8 }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <span>Белые</span>\n                <strong>{formatMs(displayedClock.wMs)}</strong>\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <span>Чёрные</span>\n                <strong>{formatMs(displayedClock.bMs)}</strong>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"panel game-history\">\n            <h3 style={{ marginTop: 0 }}>История ходов</h3>\n            {rows.length === 0 ? (\n              <p className=\"kicker\">Пока нет ходов</p>\n            ) : (\n              <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n                <thead>\n                  <tr>\n                    <th style={{ textAlign: 'left', width: 40 }}>#</th>\n                    <th style={{ textAlign: 'left' }}>Белые</th>\n                    <th style={{ textAlign: 'left' }}>Чёрные</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {rows.map((r) => (\n                    <tr key={r.no}>\n                      <td>{r.no}.</td>\n                      <td>{r.w}</td>\n                      <td>{r.b}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComputerGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}